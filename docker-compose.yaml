version: '3.7'
services:
  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_app123
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["/booking/docker/app.sh"]
    ports:
      - 7777:8000

  celery:
    image: celery_booking
    build:
      context: .
    container_name: booking_celery
    env_file:
      - .env-non-dev
    command: sh -c "celery --app=app.tasks.celeryfile:celery worker -l INFO"
    depends_on:
      - redis

  flower:
    image: flower_booking
    build:
      context: .
    container_name: booking_flower
    env_file:
      - .env-non-dev
    command: sh -c "celery --app=app.tasks.celeryfile:celery flower"
    ports:
      - 5555:5555
    depends_on:
      - redis
      - celery

#  prometheus:
#   image: prom/prometheus:v2.43.0
#   container_name: prometheus
#   volumes:
#     - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     - prometheusdata:/prometheus
#   restart: unless-stopped
#   ports:
#     - 9090:9090
#
#  grafana:
#   image: grafana/grafana:9.4.7
#   container_name: grafana
#   volumes:
#     - grafanadata:/var/lib/grafana
#   restart: unless-stopped
#   ports:
#     - 3000:3000

volumes:
  postgresdata:
#  grafanadata:
#  prometheusdata:
